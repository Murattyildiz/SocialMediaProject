@model List<ArticleDetail>
@{
    ViewData["Title"] = "Profile";
    Layout = "~/Views/Shared/_HomeLayout.cshtml";
    int UserId = Convert.ToInt32(ViewData["UserId"]);
    bool isOwnProfile = UserId == ViewBag.CurrentUserId;
    bool isFollowing = ViewBag.IsFollowing != null && (bool)ViewBag.IsFollowing;
}

<div class="container">
    <div class="row">
        <!-- Profil Bilgileri -->
        <div class="col-md-12 mb-4">
            <div class="card">
                <div class="card-body">
                    <div class="d-flex align-items-center">
                        <img src="@ViewData["UserImage"]" class="rounded-circle me-3" width="100" height="100" alt="Profile Picture">
                        <div>
                            <h4 class="mb-0">@ViewData["UserName"]</h4>
                            <div class="mt-2">
                                <button class="btn btn-outline-primary me-2" data-bs-toggle="modal" data-bs-target="#followersModal">
                                    <i class="bi bi-people-fill"></i> Takipçiler <span class="badge bg-secondary" id="followerCount">0</span>
                                </button>
                                <button class="btn btn-outline-primary me-2" data-bs-toggle="modal" data-bs-target="#followingModal">
                                    <i class="bi bi-person-plus-fill"></i> Takip Edilenler <span class="badge bg-secondary" id="followingCount">0</span>
                                </button>
                                @if (!isOwnProfile)
                                {
                                    <button class="btn @(isFollowing ? "btn-danger" : "btn-success") follow-button"
                                            data-user-id="@UserId"
                                            data-is-following="@isFollowing.ToString().ToLower()">
                                        @(isFollowing ? "Takibi Bırak" : "Takip Et")
                                    </button>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Paylaşımlar -->
        <div class="col-md-8">
            @if (Model != null && Model.Any())
            {
                foreach (var article in Model)
                {
                    <div class="card mb-3">
                        <div class="card-body">
                            <div class="d-flex align-items-center mb-3">
                                <img src="@ViewData["UserImage"]" class="rounded-circle me-2" width="40" height="40" alt="">
                                <div>
                                    <h6 class="mb-0">@ViewData["UserName"]</h6>
                                    <small class="text-muted">@string.Format("{0:dd.MM.yyyy HH:mm:ss}", article.SharingDate)</small>
                                </div>
                            </div>
                            <div class="mb-3">
                                <span class="badge bg-primary">#@article.TopicTitle</span>
                            </div>
                            @Html.Raw(article.Content)
                            
                            <!-- Yorum Bölümü -->
                            <div class="pt-3 ps-2 pe-2">
                                <div class="d-flex justify-content-between align-items-center">
                                    @{
                                        var validComments = article.CommentDetails?.Where(x => x.Id != -1).Count() ?? 0;
                                        if (validComments > 0)
                                        {
                                            <button class="btn btn-outline-primary show-comments-btn" type="button" data-article-id="@article.Id">
                                                <i class="bi bi-chat-dots"></i> 
                                                Yorumlar (@validComments)
                                            </button>
                                        }
                                        else
                                        {
                                            <span class="text-muted">Henüz yorum yapılmamış</span>
                                        }
                                    }
                                    <button class="btn btn-outline-secondary">@string.Format("{0:dd.MM.yyyy}", article.SharingDate)</button>
                                </div>
                                
                                <div class="comments-section mt-3" id="comments-@article.Id" style="display: none;">
                                    @if (article.CommentDetails != null && article.CommentDetails.Any())
                                    {
                                        foreach (var comment in article.CommentDetails)
                                        {
                                            <div class="comment mb-3 p-3 border rounded">
                                                <div class="d-flex justify-content-between align-items-center">
                                                    <div class="d-flex align-items-center">
                                                        @if (string.IsNullOrEmpty(comment.Image))
                                                        {
                                                            <img src="https://localhost:5190/images/default.jpg" class="rounded-circle me-2" width="40" height="40" />
                                                        }
                                                        else
                                                        {
                                                            <img src="https://localhost:5190/@comment.Image" class="rounded-circle me-2" width="40" height="40" />
                                                        }
                                                        <div>
                                                            <strong>@comment.UserName</strong>
                                                            <small class="text-muted d-block">@string.Format("{0:dd.MM.yyyy HH:mm:ss}", comment.CommentDate)</small>
                                                        </div>
                                                    </div>
                                                    @if (comment.UserId == ViewBag.CurrentUserId || User.IsInRole("admin"))
                                                    {
                                                        <button class="btn btn-sm btn-danger delete-comment" data-comment="@comment.Id" data-bs-toggle="modal" data-bs-target="#deleteCommentModal">
                                                            <i class="bi bi-trash"></i>
                                                        </button>
                                                    }
                                                </div>
                                                <p class="mt-2 mb-0">@comment.CommentText</p>
                                            </div>
                                        }
                                    }
                                    else
                                    {
                                        <p class="text-muted">Henüz yorum yapılmamış.</p>
                                    }
                                    <div class="comment-form-section mt-3">
                                        <form class="comment-form" data-article-id="@article.Id">
                                            <div class="input-group">
                                                <input type="text" name="CommentText" class="form-control" placeholder="Yorumunuzu yazın...">
                                                <button type="submit" class="btn btn-primary">Gönder</button>
                                            </div>
                                        </form>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            }
            else
            {
                <div class="alert alert-info">Henüz paylaşım yapılmamış.</div>
            }
        </div>

        <!-- Sağ Sidebar -->
        <div class="col-md-4">
            <div class="card">
                <div class="card-header">
                    <h5 class="mb-0">İstatistikler</h5>
                </div>
                <div class="card-body">
                    <div class="d-flex justify-content-between mb-3">
                        <span>Toplam Paylaşım:</span>
                        <span class="badge bg-primary">@(Model?.Count ?? 0)</span>
                    </div>
                    <div class="d-flex justify-content-between mb-3">
                        <span>Toplam Yorum:</span>
                        <span class="badge bg-info">@(Model?.SelectMany(a => a.CommentDetails)?.Where(c => c.Id != -1)?.Count() ?? 0)</span>
                    </div>
                    <div class="d-flex justify-content-between mb-3">
                        <span>Son Paylaşım:</span>
                        <span class="badge bg-success">@(Model?.Any() == true ? Model.First().SharingDate : "-")</span>
                    </div>
                    <div class="d-flex justify-content-between mb-3">
                        <span>Profil Oluşturma:</span>
                        <span class="badge bg-secondary">@ViewData["UserRegistrationDate"]</span>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Takipçiler Modal -->
<div class="modal fade" id="followersModal" tabindex="-1" aria-labelledby="followersModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="followersModalLabel">Takipçiler</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div id="followersList" class="list-group">
                    <!-- Takipçiler dinamik olarak yüklenecek -->
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Takip Edilenler Modal -->
<div class="modal fade" id="followingModal" tabindex="-1" aria-labelledby="followingModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="followingModalLabel">Takip Edilenler</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div id="followingList" class="list-group">
                    <!-- Takip edilenler dinamik olarak yüklenecek -->
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Yorum Silme Modal -->
<div class="modal fade" id="deleteCommentModal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="deleteCommentModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteCommentModalLabel">Yorum Silme</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>Bu yorumu silmek istediğinize emin misiniz?</p>
                <p class="text-danger">Bu işlem geri alınamaz!</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">İptal</button>
                <button type="button" class="btn btn-danger" id="confirmDeleteComment">Sil</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            // Takipçi sayılarını yükle
            loadFollowCounts();

            // Takip et/Takibi bırak butonu
            $('.follow-button').click(function() {
                var button = $(this);
                var userId = button.data('user-id');
                var isFollowing = button.data('is-following');
                
                $.ajax({
                    url: isFollowing ? '/User/Unfollow' : '/User/Follow',
                    type: 'POST',
                    data: { followedId: userId },
                    beforeSend: function() {
                        button.prop('disabled', true);
                        button.html('<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>');
                    },
                    success: function(response) {
                        if (response.success) {
                            // Immediately update button state without refreshing
                            if (isFollowing) {
                                button.removeClass('btn-danger').addClass('btn-success');
                                button.text('Takip Et');
                                button.data('is-following', false);
                                // Also update the attribute for next click
                                button.attr('data-is-following', 'false');
                            } else {
                                button.removeClass('btn-success').addClass('btn-danger');
                                button.text('Takibi Bırak');
                                button.data('is-following', true);
                                // Also update the attribute for next click
                                button.attr('data-is-following', 'true');
                            }
                            loadFollowCounts();
                            
                            // Başarılı mesajı göster
                            Swal.fire({
                                icon: 'success',
                                title: 'Başarılı!',
                                text: isFollowing ? 'Takipten çıktınız.' : 'Takip ettiniz.',
                                timer: 1500,
                                showConfirmButton: false
                            });
                        } else {
                            console.error('Takip işlemi başarısız:', response);
                            Swal.fire({
                                icon: 'error',
                                title: 'Hata!',
                                text: response.message || 'İşlem başarısız oldu. Lütfen tekrar deneyin.'
                            });
                        }
                    },
                    error: function(xhr, status, error) {
                        console.error('Takip işlemi hatası:', error);
                        console.error('Durum kodu:', xhr.status);
                        console.error('Durum metni:', xhr.statusText);
                        console.error('Sunucu yanıtı:', xhr.responseText);
                        Swal.fire({
                            icon: 'error',
                            title: 'Hata!',
                            text: 'Bir hata oluştu. Lütfen tekrar deneyin. Durum kodu: ' + xhr.status
                        });
                    },
                    complete: function() {
                        button.prop('disabled', false);
                        button.text(isFollowing ? 'Takibi Bırak' : 'Takip Et');
                    }
                });
            });

            function loadFollowCounts() {
                $.ajax({
                    url: '/User/GetFollowCounts',
                    type: 'GET',
                    data: { userId: @UserId },
                    success: function(response) {
                        if (response.success) {
                            $('#followerCount').text(response.followerCount);
                            $('#followingCount').text(response.followingCount);
                        }
                    }
                });
            }

            // Takipçileri ve takip edilenleri yükle
            $('#followersModal').on('show.bs.modal', function() {
                $.ajax({
                    url: '/User/GetFollowers',
                    type: 'GET',
                    data: { userId: @UserId },
                    success: function(response) {
                        if (response.success) {
                            var html = '';
                            if (response.data && response.data.length > 0) {
                            response.data.forEach(function(follower) {
                                    console.log('Follower data:', follower); // Debug
                                    var followerName = follower.followerName || 'İsimsiz Kullanıcı';
                                    var imageUrl = 'https://localhost:5190/images/' + (follower.followerImage || 'default.jpg');
                                    
                                html += `
                                        <a href="/profil/${follower.followerId}" class="list-group-item list-group-item-action">
                                        <div class="d-flex align-items-center">
                                                <img src="${imageUrl}" class="rounded-circle me-2" width="32" height="32">
                                                <span>${followerName}</span>
                                        </div>
                                    </a>`;
                            });
                            } else {
                                html = '<div class="text-center p-3">Henüz takipçi yok</div>';
                            }
                            $('#followersList').html(html);
                        } else {
                            $('#followersList').html('<div class="text-center p-3 text-danger">Takipçiler yüklenirken bir hata oluştu</div>');
                        }
                    },
                    error: function(xhr, status, error) {
                        console.error('Takipçiler yüklenirken hata:', error);
                        console.error('Sunucu yanıtı:', xhr.responseText);
                        $('#followersList').html('<div class="text-center p-3 text-danger">Takipçiler yüklenirken bir hata oluştu</div>');
                    }
                });
            });

            $('#followingModal').on('show.bs.modal', function() {
                $.ajax({
                    url: '/User/GetFollowing',
                    type: 'GET',
                    data: { userId: @UserId },
                    success: function(response) {
                        if (response.success) {
                            var html = '';
                            if (response.data && response.data.length > 0) {
                                console.log('Following data:', response.data); // Debug
                            response.data.forEach(function(following) {
                                    var followedName = following.followedName || 'İsimsiz Kullanıcı';
                                    var imageUrl = 'https://localhost:5190/images/' + (following.followedImage || 'default.jpg');
                                    
                                html += `
                                        <a href="/profil/${following.followedId}" class="list-group-item list-group-item-action">
                                        <div class="d-flex align-items-center">
                                                <img src="${imageUrl}" class="rounded-circle me-2" width="32" height="32">
                                                <span>${followedName}</span>
                                        </div>
                                    </a>`;
                            });
                            } else {
                                html = '<div class="text-center p-3">Henüz takip edilen kullanıcı yok</div>';
                            }
                            $('#followingList').html(html);
                        } else {
                            $('#followingList').html('<div class="text-center p-3 text-danger">Takip edilen kullanıcılar yüklenirken bir hata oluştu</div>');
                        }
                    },
                    error: function(xhr, status, error) {
                        console.error('Takip edilenler yüklenirken hata:', error);
                        console.error('Sunucu yanıtı:', xhr.responseText);
                        $('#followingList').html('<div class="text-center p-3 text-danger">Takip edilen kullanıcılar yüklenirken bir hata oluştu</div>');
                        }
                });
            });
            
            // Yorum göster/gizle
            $(".show-comments-btn").click(function() {
                var articleId = $(this).data("article-id");
                var commentsSection = $("#comments-" + articleId);
                
                if (commentsSection.is(":visible")) {
                    commentsSection.slideUp();
                    $(this).removeClass("btn-primary").addClass("btn-outline-primary");
                } else {
                    commentsSection.slideDown();
                    $(this).removeClass("btn-outline-primary").addClass("btn-primary");
                }
            });

            // Yorum ekleme
            $(".comment-form").on("submit", function (e) {
                e.preventDefault();
                var form = $(this);
                var ArticleId = form.data("article-id");
                var CommentText = form.find("input[name=CommentText]").val();
                
                if (!CommentText || CommentText.trim() === "") {
                    Swal.fire({
                        icon: 'warning',
                        title: 'Uyarı!',
                        text: 'Lütfen bir yorum yazın.'
                    });
                    return;
                }

                var comment = {
                    ArticleId: parseInt(ArticleId),
                    CommentText: CommentText.trim()
                };

                $.ajax({
                    type: "POST",
                    url: "/post-comment",
                    contentType: "application/json",
                    data: JSON.stringify(comment),
                    beforeSend: function() {
                        form.find('button[type="submit"]').prop('disabled', true)
                            .html('<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span> Gönderiliyor...');
                    },
                    success: function (response) {
                        if (response.success) {
                            form[0].reset();
                            Swal.fire({
                                icon: 'success',
                                title: 'Başarılı!',
                                text: 'Yorumunuz başarıyla eklendi.',
                                timer: 1000,
                                showConfirmButton: false
                            }).then(function() {
                                location.reload();
                            });
                        } else {
                            Swal.fire({
                                icon: 'error',
                                title: 'Hata!',
                                text: response.message || 'Yorum eklenirken bir hata oluştu.'
                            });
                        }
                    },
                    error: function (xhr, status, error) {
                        console.error('Yorum ekleme hatası:', error);
                        console.error('Sunucu yanıtı:', xhr.responseText);
                        Swal.fire({
                            icon: 'error',
                            title: 'Hata!',
                            text: 'Yorum eklenirken bir hata oluştu. Lütfen daha sonra tekrar deneyin.'
                        });
                    },
                    complete: function() {
                        form.find('button[type="submit"]').prop('disabled', false)
                            .html('Gönder');
                    }
                });
            });
            
            // Yorum silme
            let commentIdToDelete = null;

            // Yorum silme butonuna tıklandığında
            $('.delete-comment').click(function() {
                commentIdToDelete = $(this).data('comment');
            });

            // Silme işlemini onaylama
            $('#confirmDeleteComment').click(function() {
                if (!commentIdToDelete) {
                    Swal.fire({
                        icon: 'error',
                        title: 'Hata!',
                        text: 'Silinecek yorum bulunamadı.'
                    });
                    return;
                }

                $.ajax({
                    url: '/delete-comment',
                    type: 'POST',
                    data: { id: commentIdToDelete },
                    beforeSend: function() {
                        $('#confirmDeleteComment').prop('disabled', true)
                            .html('<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span> Siliniyor...');
                    },
                    success: function(response) {
                        if (response && response.success) {
                            $('#deleteCommentModal').modal('hide');
                            Swal.fire({
                                icon: 'success',
                                title: 'Başarılı!',
                                text: response.message || 'Yorum başarıyla silindi.',
                                timer: 1000,
                                showConfirmButton: false
                            }).then(function() {
                                location.reload();
                            });
                        } else {
                            Swal.fire({
                                icon: 'error',
                                title: 'Hata!',
                                text: response.message || 'Yorum silinirken bir hata oluştu.'
                            });
                        }
                    },
                    error: function(xhr, status, error) {
                        console.error('Yorum silme hatası:', error);
                        $('#deleteCommentModal').modal('hide');
                        Swal.fire({
                            icon: 'error',
                            title: 'Hata!',
                            text: 'Yorum silinirken bir hata oluştu. Lütfen daha sonra tekrar deneyin.'
                        });
                    },
                    complete: function() {
                        $('#confirmDeleteComment').prop('disabled', false)
                            .html('Sil');
                    }
                });
            });
        });
    </script>
}